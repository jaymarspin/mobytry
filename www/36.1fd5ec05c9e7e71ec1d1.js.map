{"version":3,"sources":["./src/app/pages/testdrive/testdrives/filter-testdrive/filter-testdrive.component.ts","./src/app/pages/testdrive/testdrives/filter-testdrive/filter-testdrive.component.html","./src/app/pages/testdrive/testdrives/testdrives.page.html","./src/app/pages/testdrive/testdrives/testdrives-routing.module.ts","./src/app/pages/testdrive/testdrives/testdrives.page.ts","./src/app/pages/testdrive/testdrives/testdrives.module.ts"],"names":["FilterTestdriveComponent","modalCtrl","this","filterObj","reset","tdStatus","dismiss","type","cancel","updateTdStatus","apply","routes","path","PARAM_ID","children","component","TestdrivesPage","route","router","testdriveSrvc","translate","loadingCtrl","subs","Subscription","countryCode","environment","add","parseURL","paramMap","subscribe","params","oppId","get","getTestdrives","filter","pipe","mergeMap","lang","from","create","message","loading","present","tap","e","testdrives","console","log","err","item","navigate","BASE","Id","veh","checkStatus","Status","vehStatus","state","Object","STATE_OPPID","backdropDismiss","animated","cssClass","componentProps","assign","modal","onDidDismiss","res","data","showFilter","pathMatch","TestdrivesPageRoutingModule","forChild","TestdrivesPageModule"],"mappings":"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","file":"36.1fd5ec05c9e7e71ec1d1.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { TdFilterModel } from 'src/app/models/common/filter.model';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-filter-testdrive',\n  templateUrl: './filter-testdrive.component.html',\n  styleUrls: ['./filter-testdrive.component.scss'],\n})\nexport class FilterTestdriveComponent implements OnInit {\n  @Input() filterObj: TdFilterModel;\n\n  constructor(private modalCtrl: ModalController) {}\n\n  ngOnInit() {\n    if (!this.filterObj) {\n      this.reset();\n    }\n  }\n\n  getData() {}\n\n  reset() {\n    this.filterObj = {\n      tdStatus: 'all',\n    };\n  }\n\n  apply() {\n    this.modalCtrl.dismiss(this.filterObj);\n  }\n\n  cancel() {\n    this.modalCtrl.dismiss();\n  }\n\n  getUpcomingIcon() {\n    if (this.filterObj.tdStatus === 'upcoming') {\n      return 'assets/icon/opportunity/upcoming.svg';\n    } else {\n      return 'assets/icon/opportunity/upcoming-disabled.svg';\n    }\n  }\n\n  updateTdStatus(type: string) {\n    if (type === 'ongoing') {\n      this.filterObj.tdStatus = 'ongoing';\n    } else if (type === 'upcoming') {\n      this.filterObj.tdStatus = 'upcoming';\n    } else if (type === 'all') {\n      this.filterObj.tdStatus = 'all';\n    } else {\n      this.filterObj.tdStatus = 'completed';\n    }\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar color=\"primary\" mode=\"ios\">\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"cancel()\">\n        <ion-icon slot=\"icon-only\" name=\"arrow-back\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"reset()\">\n        {{ 'TestdriveFilter_Reset' | translate }}\n      </ion-button>\n    </ion-buttons>\n    <ion-title>{{ 'TestdriveFilter_Filter' | translate }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n<ion-content>\n  <div class=\"ion-padding\">\n    <ion-grid class=\"ion-no-margin ion-no-padding\">\n      <ion-row>\n        <ion-col size=\"12\">\n          <ion-label>\n            {{ 'TestdriveFilter_TestDriveStatus' | translate }}\n          </ion-label>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"ion-text-center ion-padding-top\">\n        <ion-col class=\"header-btn\" (click)=\"updateTdStatus('all')\" [class.activated]=\"filterObj.tdStatus === 'all'\">\n          <ion-icon name=\"apps\" [color]=\"filterObj.tdStatus === 'all' ? 'primary' : 'medium'\"></ion-icon>\n\n          <ion-label class=\"mat-small\">\n            {{ 'TestdriveFilter_All' | translate }}\n          </ion-label>\n        </ion-col>\n        <ion-col class=\"header-btn\" (click)=\"updateTdStatus('ongoing')\" [class.activated]=\"filterObj.tdStatus === 'ongoing'\">\n          <ion-icon name=\"play\" [color]=\"filterObj.tdStatus === 'ongoing' ? 'primary' : 'medium'\"></ion-icon>\n\n          <ion-label class=\"mat-small\">\n            {{ 'TestdriveFilter_Ongoing' | translate }}\n          </ion-label>\n        </ion-col>\n        <ion-col class=\"header-btn\" (click)=\"updateTdStatus('completed')\" [class.activated]=\"filterObj.tdStatus === 'completed'\">\n          <ion-icon name=\"checkmark\" [color]=\"filterObj.tdStatus === 'completed' ? 'primary' : 'medium'\"></ion-icon>\n\n          <ion-label class=\"mat-small\">\n            {{ 'TestdriveFilter_Completed' | translate }}\n          </ion-label>\n        </ion-col>\n        <ion-col class=\"header-btn\" (click)=\"updateTdStatus('upcoming')\" [class.activated]=\"filterObj.tdStatus === 'upcoming'\">\n          <ion-icon src=\"{{ getUpcomingIcon() }}\"></ion-icon>\n\n          <ion-label class=\"mat-small\">\n            {{ 'TestdriveFilter_Upcoming' | translate }}\n          </ion-label>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </div>\n</ion-content>\n<ion-footer class=\"ion-padding\">\n  <ion-button fill=\"solid\" expand=\"block\" color=\"primary\" (click)=\"apply()\">\n    {{ 'Common_Apply' | translate }}\n  </ion-button>\n</ion-footer>\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"primary\" mode=\"ios\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"\" text=\"{{'Common_Back'|translate}}\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"showFilter()\">\r\n        <ion-icon slot=\"icon-only\" name=\"funnel\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      {{\"TestdrivePage_Testdrives\"|translate}}<br />\r\n      <ion-text *ngIf=\"oppId && countryCode === 'my'\" class=\"sub-header\"> {{\"TestdrivePage_OpportunityID\"|translate}}: {{oppId}} </ion-text>\r\n    </ion-title>\r\n  </ion-toolbar>\r\n  <ion-toolbar class=\"bg\" *ngIf=\"oppId\">\r\n    <div class=\"border ion-margin-start ion-margin-end ion-margin-top ion-padding ion-text-center\" (click)=\"add()\">\r\n      <ion-icon name=\"add-circle\" color=\"primary\" class=\"add-icon\"></ion-icon>\r\n      <ion-label color=\"primary\"> {{ \"Testdrive_AddTestDrive\" | translate }} </ion-label>\r\n    </div>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content class=\"ion-padding-start ion-padding-end ion-padding-bottom\">\r\n  <div class=\"ion-margin-top ion-margin-bottom border-radius\" *ngFor=\"let td of testdrives\">\r\n    <ion-grid class=\"ion-no-margin\">\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-label color=\"{{getColor(td?.Vehicle)}}\"><b>{{td?.Vehicle?.Status}}</b></ion-label\r\n          ><br />\r\n          <ion-label color=\"{{getColor(td?.Vehicle)}}\">\r\n            <b>{{td?.ContactName}}</b>\r\n          </ion-label>\r\n          <div class=\"bottom-icon\">\r\n            <ion-icon src=\"{{ getIcon(td?.Vehicle) }}\"></ion-icon>\r\n          </div>\r\n        </ion-col>\r\n        <ion-col class=\"ion-text-start\">\r\n          <ion-label>{{ td?.DocNum }}</ion-label><br />\r\n          <ion-label>{{ td?.Vehicle?.Name }}</ion-label><br />\r\n          <ion-label *nfIf=\"countryCode == 'my'\">{{ td?.DrivingLicense }}</ion-label><br />\r\n\r\n          <ion-label>{{ td?.ExpiryDate | date: \"dd MMM y\" }}</ion-label><br />\r\n          <ion-label> {{ td?.PlannedStartDate | date: \"dd MMM y hh:mm a\" }} </ion-label><br />\r\n          <ion-label>\r\n            <a (click)=\"goToTestdrive(td)\"> {{\"OpportunityTab_ViewDetails\"|translate}} </a>\r\n          </ion-label>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </div>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestdrivesPage } from './testdrives.page';\nimport { TestdrivePageRoutingKeys } from './testdrive-routing.keys';\n\nconst routes: Routes = [\n  {\n    path: `:${TestdrivePageRoutingKeys.PARAM_ID}`,\n    children: [\n      {\n        path: '',\n        component: TestdrivesPage,\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestdrivesPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Testdrive, Vehicle } from 'src/app/models/common/testdrive.model';\r\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { EditTestdrivePageRoutingKeys } from '../edit-testdrive/edit-testdrive-routing.keys';\r\nimport { CommonTestdriveService } from 'src/app/services/common/testdrive/testdrive.service';\r\nimport { Subscription, from } from 'rxjs';\r\nimport { ViewTestdrivePageRoutingKeys } from '../view-testdrive/view-testdrive-routing.keys';\r\nimport { ModalController, LoadingController } from '@ionic/angular';\r\nimport { FilterTestdriveComponent } from './filter-testdrive/filter-testdrive.component';\r\nimport { TdFilterModel } from 'src/app/models/common/filter.model';\r\nimport { TestdrivePageRoutingKeys } from './testdrive-routing.keys';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { mergeMap, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-testdrives',\r\n  templateUrl: './testdrives.page.html',\r\n  styleUrls: ['./testdrives.page.scss'],\r\n})\r\nexport class TestdrivesPage implements OnInit {\r\n  private subs = new Subscription();\r\n  testdrives: Testdrive[];\r\n  oppId: string;\r\n  filterObj: TdFilterModel;\r\n  countryCode = environment.countryCode;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private testdriveSrvc: CommonTestdriveService,\r\n    private modalCtrl: ModalController,\r\n    private translate: TranslateService,\r\n    private loadingCtrl: LoadingController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subs.add(this.parseURL());\r\n  }\r\n\r\n  parseURL() {\r\n    return this.route.paramMap.subscribe((params) => {\r\n      this.oppId = params.get(TestdrivePageRoutingKeys.PARAM_ID);\r\n      if (this.oppId === TestdrivePageRoutingKeys.PARAM_ID) {\r\n        this.oppId = '';\r\n      }\r\n      this.getTestdrives(null, this.oppId);\r\n    });\r\n  }\r\n\r\n  getTestdrives(filter: TdFilterModel, oppId: string) {\r\n    return this.translate\r\n      .get('Common_Loading')\r\n      .pipe(\r\n        mergeMap((lang) => {\r\n          return from(\r\n            this.loadingCtrl.create({\r\n              message: lang,\r\n            })\r\n          );\r\n        }),\r\n        mergeMap((loading) => {\r\n          loading.present();\r\n          return this.testdriveSrvc.getTestdrives(filter, oppId).pipe(\r\n            tap(\r\n              (e) => {\r\n                this.testdrives = e;\r\n                console.log(this.testdrives);\r\n                loading.dismiss();\r\n              },\r\n              (err) => {\r\n                loading.dismiss();\r\n              }\r\n            )\r\n          );\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  goToTestdrive(item: Testdrive) {\r\n    this.router.navigate([`${ViewTestdrivePageRoutingKeys.BASE}/${item.Id}`]);\r\n  }\r\n\r\n  getColor(veh: Vehicle) {\r\n    if (veh && this.checkStatus(veh.Status)) {\r\n      return 'primary';\r\n    }\r\n  }\r\n\r\n  getIcon(veh: Vehicle) {\r\n    if (veh && this.checkStatus(veh.Status)) {\r\n      return 'assets/icon/testdrive/active-td.svg';\r\n    } else {\r\n      return 'assets/icon/testdrive/inactive-td.svg';\r\n    }\r\n  }\r\n\r\n  checkStatus(vehStatus: string) {\r\n    return vehStatus === 'VEHICLE OUT' || vehStatus === 'SCHEDULED';\r\n  }\r\n\r\n  add() {\r\n    const state = new Object();\r\n    state[EditTestdrivePageRoutingKeys.STATE_OPPID] = this.oppId;\r\n    const navigationExtras: NavigationExtras = {\r\n      state,\r\n    };\r\n    this.router.navigate([`${EditTestdrivePageRoutingKeys.BASE}/${EditTestdrivePageRoutingKeys.PARAM_ID}`], navigationExtras);\r\n  }\r\n\r\n  showFilter() {\r\n    from(\r\n      this.modalCtrl.create({\r\n        component: FilterTestdriveComponent,\r\n        backdropDismiss: false,\r\n        animated: true,\r\n        cssClass: 'full-screen',\r\n        componentProps: {\r\n          filterObj: this.filterObj ? Object.assign({}, this.filterObj) : null,\r\n        },\r\n      })\r\n    ).subscribe((modal) => {\r\n      from(modal.onDidDismiss()).subscribe((res: any) => {\r\n        if (res && res.data) {\r\n          this.filterObj = res.data;\r\n          this.getTestdrives(this.filterObj, this.oppId);\r\n        }\r\n      });\r\n      modal.present();\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestdrivesPageRoutingModule } from './testdrives-routing.module';\n\nimport { TestdrivesPage } from './testdrives.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FilterTestdriveComponent } from './filter-testdrive/filter-testdrive.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, TranslateModule, IonicModule, TestdrivesPageRoutingModule],\n  declarations: [TestdrivesPage, FilterTestdriveComponent],\n})\nexport class TestdrivesPageModule {}\n"],"sourceRoot":"webpack:///"}