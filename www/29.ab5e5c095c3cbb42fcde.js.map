{"version":3,"sources":["./src/app/pages/opportunity/opportunity-details/opportunity-details.page.html","./src/app/pages/opportunity/opportunity-details/opportunity-details-routing.module.ts","./src/app/pages/opportunity/opportunity-details/opportunity-details.page.ts","./src/app/components/common/model-interest-selector/model-interest-selector.module.ts","./src/app/pages/opportunity/opportunity-details/opportunity-details.module.ts"],"names":["routes","path","PARAM_ID","children","component","OpportunityDetailsPage","opportunityService","route","router","modalController","translate","loadingCtrl","formBuilder","subs","Subscription","countryCode","environment","customPPDate","PP_DATE_CUSTOM","this","oppForm","initOppForm","add","parseURL","group","name","company","modelInterest","required","warmth","notes","PPD","PPDRange","PPDReason","source","channel","initErrorMessages","opp","paramMap","subscribe","params","Id","get","pipe","mergeMap","lang","from","create","message","loading","present","forkJoin","getOpportunities","getPPRange","getCmpgList","tap","e","isPPDChanged","undefined","updateForm","dismiss","err","o1","o2","getPPDateRange","Company","ppDateRange","opt","label","value","push","today","Date","setMonth","setDate","ppDateMin","toJSON","maxDate","getFullYear","ppDateMax","cmpgList","chnlList","Cmpg","Channel","form","formErrorMessages","key","Object","keys","controls","oppId","getOpportunityById","console","log","IntentStatus","Warmth","reset","ContactName","ModelInterest","Notes","PlannedPurchasedDate","PlannedPurchaseDateRange","PlannedPurchaseDateReason","emitEvent","oppStatus","IsClosed","Type","type","evt","clearValidators","formValues","setValidators","updateValueAndValidity","indexOf","disabled","enable","disable","componentProps","cmp","team","selectedValues","modal","onDidDismiss","modalData","data","selectedModel","map","model","JSON","stringify","setValue","markAsDirty","navigate","BASE","Flag","valid","upsertOpp","res","hasError","Error","getError","save","goToTestdrives","goToTradeIns","goToTasks","showModelInterestComp","changePPD","changeCmpgSource","updateOppStatus","pathMatch","OpportunityDetailsPageRoutingModule","forChild","ModelInterestSelectorModule","OpportunityDetailsPageModule"],"mappings":"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","file":"29.ab5e5c095c3cbb42fcde.js","sourcesContent":["<ion-header class=\"ion-no-border\">\n  <ion-toolbar color=\"primary\" mode=\"ios\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"\" text=\"{{'Common_Back'|translate}}\"></ion-back-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"save()\">{{'Common_Save'|translate}}</ion-button>\n    </ion-buttons>\n    <ion-title>{{\"OpportunityTab_Opportunity\"|translate}}</ion-title>\n  </ion-toolbar>\n</ion-header>\n<ion-content>\n  <div class=\"ion-text-center ion-padding\">\n    <h2>{{opp?.ContactName}}</h2>\n    <ion-icon name=\"{{ getFavIcon(opp) }}\" color=\"primary\" class=\"heart\" *ngIf=\"countryCode == 'my'\"></ion-icon>\n    <ion-text class=\"sub\">{{opp?.Source}}</ion-text>\n    <!-- 1ST ROW -->\n    <div class=\"ion-margin-bottom ion-margin-top\">\n      <ion-grid class=\"ion-no-margin ion-no-padding\">\n        <ion-row>\n          <ion-col>\n            <div class=\"header-btn\" (click)=\"goToTestdrives()\">\n              <span>\n                <ion-icon src=\"assets/icon/opportunity/testdrive.svg\" color=\"primary\"></ion-icon>\n              </span>\n              <div>\n                <ion-label class=\"mat-small\"> {{\"OpportunityDetails_Testdrive\"|translate}} </ion-label>\n              </div>\n            </div>\n          </ion-col>\n          <ion-col>\n            <div class=\"header-btn\" (click)=\"goToTradeIns()\">\n              <span>\n                <ion-icon src=\"assets/icon/opportunity/tradein.svg\" color=\"primary\"></ion-icon>\n              </span>\n              <div>\n                <ion-label class=\"mat-small\"> {{\"OpportunityDetails_TradeIn\"|translate}} </ion-label>\n              </div>\n            </div>\n          </ion-col>\n          <ion-col *ngIf=\"false\">\n            <div class=\"header-btn\" (click)=\"goToOffers()\">\n              <span>\n                <ion-icon name=\"document\" color=\"primary\"></ion-icon>\n              </span>\n              <div>\n                <ion-label class=\"mat-small\"> {{\"OpportunityDetails_Offer\"|translate}} </ion-label>\n              </div>\n            </div>\n          </ion-col>\n          <ion-col *ngIf=\"false\">\n            <div class=\"header-btn\">\n              <span>\n                <ion-icon src=\"assets/icon/opportunity/booking-disabled.svg\"></ion-icon>\n              </span>\n              <div>\n                <ion-label class=\"mat-small\" color=\"medium\"> {{\"OpportunityDetails_Booking\"|translate}} </ion-label>\n              </div>\n            </div>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </div>\n    <!-- 2ND ROW -->\n    <div class=\"ion-margin-bottom ion-margin-top\">\n      <ion-grid class=\"ion-no-margin ion-no-padding\">\n        <ion-row>\n          <ion-col *ngIf=\"false\">\n            <div class=\"header-btn\" (click)=\"goToDeliveries()\">\n              <span>\n                <ion-icon src=\"assets/icon/opportunity/delivery-disabled.svg\"></ion-icon>\n              </span>\n              <div>\n                <ion-label class=\"mat-small\" color=\"medium\"> {{\"OpportunityDetails_Delivery\"|translate}} </ion-label>\n              </div>\n            </div>\n          </ion-col>\n          <ion-col *ngIf=\"false\">\n            <div class=\"header-btn\" (click)=\"goToActivityLogs()\">\n              <span>\n                <ion-icon name=\"time\" color=\"primary\"></ion-icon>\n              </span>\n              <div>\n                <ion-label class=\"mat-small\"> {{\"OpportunityDetails_ActivityLogs\"|translate}} </ion-label>\n              </div>\n            </div>\n          </ion-col>\n          <ion-col>\n            <div class=\"header-btn\" (click)=\"goToTasks()\">\n              <span>\n                <ion-icon name=\"calendar\" color=\"primary\"></ion-icon>\n              </span>\n              <div>\n                <ion-label class=\"mat-small\"> {{\"OpportunityDetails_Tasks\"|translate}} </ion-label>\n              </div>\n            </div>\n          </ion-col>\n          <ion-col *ngIf=\"false\">\n            <div class=\"header-btn\">\n              <span>\n                <ion-icon src=\"assets/icon/opportunity/more.svg\" color=\"primary\"></ion-icon>\n              </span>\n              <div>\n                <ion-label class=\"mat-small\"> {{\"OpportunityDetails_Others\"|translate}} </ion-label>\n              </div>\n            </div>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </div>\n    <ng-container [formGroup]=\"oppForm\">\n      <div class=\"ion-margin-bottom ion-margin-top\">\n        <h4 class=\"ion-text-start ion-padding-left\">{{\"OpportunityDetails_ModelInterest\"|translate}}</h4>\n        <div class=\"ion-margin-bottom ion-margin-top\">\n          <ion-item>\n            <ion-input formControlName=\"modelInterest\" placeholder=\"Model Interest\" (ionFocus)=\"showModelInterestComp()\" class=\"w100\"></ion-input>\n          </ion-item>\n        </div>\n      </div>\n      <!-- <div class=\"ion-margin-bottom ion-margin-top\">\n        <h4 class=\"ion-text-start ion-padding-left\">\n          {{\"OpportunityDetails_ModelInterest\"|translate}}\n        </h4>\n        <div class=\"ion-margin-bottom ion-margin-top\">\n          <ion-item lines=\"none\">\n            <ion-grid\n              class=\"ion-no-margin ion-no-padding ion-text-start pbt-10\"\n            >\n              <ion-row *ngFor=\"let model of getModelInterest()\">\n                <ion-col>\n                  <ion-label class=\"ion-text-wrap\">{{model?.label}}</ion-label>\n                </ion-col>\n              </ion-row>\n              <ion-row>\n                <ion-icon\n                  name=\"add\"\n                  color=\"primary\"\n                  class=\"ion-align-self-center\"\n                ></ion-icon>\n                <ion-label class=\"ion-text-wrap\" (click)=\"addModelInterest()\">\n                  <a> {{\"OpportunityDetails_AddModelInterest\"|translate}}</a>\n                </ion-label>\n              </ion-row>\n            </ion-grid>\n          </ion-item>\n        </div>\n      </div> -->\n      <!-- Planned Purchase Date -->\n      <div class=\"ion-margin-bottom ion-margin-top\">\n        <h4 class=\"ion-text-start ion-padding-left\">{{\"OpportunityDetails_PlannedPurchaseDate\"|translate}}</h4>\n        <!-- Date Range (Immediate, Within 3 Months) -->\n        <div class=\"ion-margin-bottom ion-margin-top\">\n          <ion-item>\n            <ion-select\n              interface=\"action-sheet\"\n              formControlName=\"PPDRange\"\n              placeholder='{{\"OpportunityDetails_PPDRange\"|translate}}'\n              (ionChange)=\"changePPD($event)\"\n              class=\"w100\"\n            >\n              <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of ppDateRange\"> {{ opt.label }}</ion-select-option>\n            </ion-select>\n          </ion-item>\n        </div>\n        <!-- Custom Date Selection -->\n        <div class=\"ion-margin-bottom ion-margin-top\" *ngIf=\"oppForm.value?.PPDRange === customPPDate\">\n          <ion-item>\n            <ion-datetime\n              displayFormat=\"DD MMM YYYY\"\n              [min]=\"ppDateMin\"\n              [max]=\"ppDateMax\"\n              formControlName=\"PPD\"\n              (ionChange)=\"changePPD($event)\"\n              placeholder='{{\"OpportunityDetails_PPDDate\"|translate}}'\n              class=\"w100\"\n            >\n            </ion-datetime>\n          </ion-item>\n          <app-item-err [control]=\"oppForm.controls?.PPD\" [messages]=\"formErrorMessages.PPD\"></app-item-err>\n        </div>\n        <!-- PPD Reason -->\n        <div class=\"ion-margin-bottom ion-margin-top\" *ngIf=\"isPPDChanged\">\n          <ion-item lines=\"none\">\n            <ion-textarea rows=\"3\" formControlName=\"PPDReason\" placeholder='{{\"OpportunityDetails_PPDReason\"|translate}}' class=\"w100\"></ion-textarea>\n          </ion-item>\n          <app-item-err [control]=\"oppForm.controls?.PPDReason\" [messages]=\"formErrorMessages.PPDReason\"></app-item-err>\n        </div>\n      </div>\n      <div class=\"ion-margin-bottom ion-margin-top\">\n        <h4 class=\"ion-text-start ion-padding-left\">{{\"OpportunityDetails_Source\"|translate}}</h4>\n        <div class=\"ion-margin-bottom ion-margin-top\">\n          <ion-item>\n            <ion-select\n              interface=\"action-sheet\"\n              formControlName=\"source\"\n              (ionChange)=\"changeCmpgSource($event)\"\n              [compareWith]=\"compareId\"\n              placeholder='{{\"OpportunityDetails_Source\"|translate}}'\n              class=\"w100\"\n            >\n              <ion-select-option [value]=\"opt\" *ngFor=\"let opt of cmpgList\"> {{ opt.Name }}</ion-select-option>\n            </ion-select>\n          </ion-item>\n        </div>\n        <div class=\"ion-margin-bottom ion-margin-top\">\n          <ion-item>\n            <ion-select multiple=\"true\" formControlName=\"channel\" placeholder='{{\"OpportunityDetails_Channel\"|translate}}' class=\"w100\">\n              <ion-select-option [value]=\"opt\" *ngFor=\"let opt of chnlList\"> {{ opt }}</ion-select-option>\n            </ion-select>\n          </ion-item>\n        </div>\n      </div>\n      <div class=\"ion-margin-bottom ion-margin-top\">\n        <h4 class=\"ion-text-start ion-padding-left\">{{\"OpportunityDetails_LeadStatus\"|translate}}</h4>\n        <div class=\"ion-margin-bottom ion-margin-top\">\n          <ion-grid class=\"ion-no-margin ion-no-padding\">\n            <ion-row>\n              <ion-grid class=\"ion-no-margin ion-no-padding opp-header ion-padding-top\">\n                <ion-row>\n                  <ion-col> {{\"OpportunityDetails_Cold\"|translate}} </ion-col>\n                  <ion-col> {{\"OpportunityDetails_Warm\"|translate}} </ion-col>\n                  <ion-col> {{\"OpportunityDetails_Hot\"|translate}} </ion-col>\n                </ion-row>\n              </ion-grid>\n            </ion-row>\n            <ion-row>\n              <ion-item lines=\"none\" class=\"w100\">\n                <ion-range min=\"0\" max=\"100\" step=\"50\" snaps=\"true\" formControlName=\"warmth\" mode=\"ios\" [disabled]=\"countryCode == 'sg'\">\n                  <ion-icon slot=\"start\" name=\"snow\" color=\"secondary\"></ion-icon>\n                  <ion-icon slot=\"end\" name=\"flame\" color=\"danger\"></ion-icon>\n                </ion-range>\n              </ion-item>\n              <app-item-err [control]=\"oppForm.controls?.warmth\" [messages]=\"formErrorMessages.warmth\"></app-item-err>\n            </ion-row>\n          </ion-grid>\n        </div>\n      </div>\n      <div class=\"ion-margin-bottom ion-margin-top\">\n        <h4 class=\"ion-text-start ion-padding-left\">{{\"OpportunityDetails_OpportunityStatus\"|translate}}</h4>\n        <div class=\"ion-margin-bottom ion-margin-top\">\n          <ion-grid class=\"ion-no-margin ion-no-padding\">\n            <ion-row>\n              <ion-col>\n                <div class=\"header-btn status\" (click)=\"updateOppStatus('open')\">\n                  <span>\n                    <ion-icon src=\"{{getOppColor('open', opp)}}\"></ion-icon>\n                  </span>\n                  <div>\n                    <ion-label class=\"mat-small\"> {{\"OpportunityDetails_Open\"|translate}} </ion-label>\n                  </div>\n                </div>\n              </ion-col>\n              <ion-col>\n                <div class=\"header-btn status\" (click)=\"updateOppStatus('closed')\">\n                  <span>\n                    <ion-icon name=\"close-circle\" color=\"{{getOppColor('closed', opp)}}\"></ion-icon>\n                  </span>\n                  <div>\n                    <ion-label class=\"mat-small\"> {{\"OpportunityDetails_Lost\"|translate}} </ion-label>\n                  </div>\n                </div>\n              </ion-col>\n              <ion-col *ngIf=\"countryCode == 'my'\">\n                <div class=\"header-btn status\" (click)=\"updateOppStatus('deferred')\">\n                  <span>\n                    <ion-icon name=\"timer\" color=\"{{getOppColor('deferred', opp)}}\"></ion-icon>\n                  </span>\n                  <div>\n                    <ion-label class=\"mat-small\"> {{\"OpportunityDetails_Deferred\"|translate}} </ion-label>\n                  </div>\n                </div>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </div>\n      </div>\n      <div class=\"ion-margin-bottom ion-margin-top\">\n        <h4 class=\"ion-text-start ion-padding-left\">{{\"OpportunityDetails_Notes\"|translate}}</h4>\n        <div class=\"ion-margin-bottom ion-margin-top ion-text-start\">\n          <ion-item lines=\"none\">\n            <ion-textarea rows=\"6\" formControlName=\"notes\" placeholder='{{\"EditContact_Notes\"|translate}}' readonly=\"true\"></ion-textarea>\n          </ion-item>\n          <app-item-err [control]=\"oppForm.controls?.notes\" [messages]=\"formErrorMessages.notes\"></app-item-err>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OpportunityDetailsPage } from './opportunity-details.page';\nimport { OpportunityDetailsPageRoutingKeys } from './opportunity-details-routing.keys';\n\nconst routes: Routes = [\n  {\n    path: `:${OpportunityDetailsPageRoutingKeys.PARAM_ID}`,\n    children: [\n      {\n        path: '',\n        component: OpportunityDetailsPage,\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OpportunityDetailsPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { CommonOpportunityService } from 'src/app/services/common/opportunity/opportunity.service';\nimport { Opportunity } from 'src/app/models/common/opportunity.model';\nimport { Subscription, from, forkJoin } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OpportunityDetailsPageRoutingKeys } from './opportunity-details-routing.keys';\nimport { TestdrivePageRoutingKeys } from '../../testdrive/testdrives/testdrive-routing.keys';\nimport { TasksPageRoutingKeys } from '../../task/tasks-routing.keys';\nimport { AcitiviesPageRoutingKeys } from '../../logs/activities/activities-routing.keys';\nimport { OffersPageRoutingKeys } from '../../offer/offers-routing.keys';\nimport { BookingsPageRoutingKeys } from '../../booking/bookings/bookings-routing.keys';\nimport { DeliveriesPageRoutingKeys } from '../../delivery/deliveries/deliveries-routing.keys';\nimport { ModalController, LoadingController } from '@ionic/angular';\nimport { SelectorComponent } from 'src/app/components/common/selector/selector.component';\nimport { SelectOption } from 'src/app/models/common/select-option.model';\nimport { ErrorService } from 'src/app/services/common/error/error.service';\nimport { tap, map, mergeMap } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormErrorMessages } from 'src/app/models/common/form-error.model';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { TradeinsPageRoutingKeys } from '../../tradein/tradeins/tradeins-routing.keys';\nimport { environment } from 'src/environments/environment';\nimport { OppConstant } from '../../../services/sg/opportunity/opportunity.constant';\nimport { ModelInterestSelectorComponent } from '../../../components/common/model-interest-selector/model-interest-selector.component';\nimport { Campaign } from 'src/app/models/common/campaign.model';\n\n@Component({\n  selector: 'app-opportunity-details',\n  templateUrl: './opportunity-details.page.html',\n  styleUrls: ['./opportunity-details.page.scss'],\n})\nexport class OpportunityDetailsPage implements OnInit {\n  private subs = new Subscription();\n  opp: Opportunity;\n  models: SelectOption[];\n  ppDateRange: SelectOption[];\n  cmpgList: Campaign[];\n  chnlList: string[];\n  oppForm: FormGroup;\n  formErrorMessages: FormErrorMessages;\n  countryCode = environment.countryCode;\n  customPPDate: string = OppConstant.PP_DATE_CUSTOM;\n  isPPDChanged: boolean;\n  ppDateMin: string;\n  ppDateMax: string;\n\n  constructor(\n    private opportunityService: CommonOpportunityService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private modalController: ModalController,\n    private translate: TranslateService,\n    private loadingCtrl: LoadingController,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.oppForm = this.initOppForm();\n    this.subs.add(this.parseURL());\n  }\n\n  private initOppForm(): FormGroup {\n    const oppForm = this.formBuilder.group({\n      name: [''],\n      company: [''],\n      modelInterest: [[], [Validators.required]],\n      warmth: [0],\n      notes: [''],\n      PPD: [''],\n      PPDRange: [[''], [Validators.required]],\n      PPDReason: [''],\n      source: [],\n      channel: [],\n    });\n    this.initErrorMessages(oppForm);\n    return oppForm;\n  }\n\n  parseURL() {\n    this.opp = new Opportunity();\n    return this.route.paramMap.subscribe((params) => {\n      this.opp.Id = params.get(OpportunityDetailsPageRoutingKeys.PARAM_ID);\n      this.translate\n        .get('Common_Loading')\n        .pipe(\n          mergeMap((lang) => {\n            return from(\n              this.loadingCtrl.create({\n                message: lang,\n              })\n            );\n          }),\n          mergeMap((loading) => {\n            loading.present();\n            return forkJoin([\n              this.getOpportunities(this.opp.Id).pipe(\n                mergeMap((opp) => {\n                  return forkJoin([this.getPPRange(), this.getCmpgList()]);\n                })\n              ),\n            ]).pipe(\n              tap(\n                (e) => {\n                  this.isPPDChanged = undefined;\n                  this.updateForm();\n                  loading.dismiss();\n                },\n                (err) => {\n                  loading.dismiss();\n                }\n              )\n            );\n          })\n        )\n        .subscribe();\n    });\n  }\n\n  compareId(o1, o2) {\n    return o1 && o2 ? o1.Id === o2.Id : o1 === o2;\n  }\n\n  getPPRange() {\n    return this.opportunityService.getPPDateRange(this.opp.Company).pipe(\n      tap((e) => {\n        this.ppDateRange = e;\n        const opt = new SelectOption();\n        opt.label = this.customPPDate;\n        opt.value = this.customPPDate;\n        this.ppDateRange.push(opt);\n        const today = new Date();\n        today.setMonth(0);\n        today.setDate(1);\n        this.ppDateMin = today.toJSON();\n        const maxDate = new Date(today.getFullYear() + 1, 11, 31);\n        this.ppDateMax = maxDate.toJSON();\n      })\n    );\n  }\n\n  getCmpgList() {\n    return this.opportunityService.getCmpgList(this.opp.Company).pipe(\n      tap((e) => {\n        this.cmpgList = e;\n        this.chnlList = this.opp.Cmpg?.Channel;\n      })\n    );\n  }\n\n  private initErrorMessages(form: FormGroup) {\n    this.translate.get('Error_CannotBeEmpty').subscribe((lang) => {\n      this.formErrorMessages = {\n        group: {},\n      };\n      if (!form) {\n        return;\n      }\n      for (const key of Object.keys(form.controls)) {\n        switch (key) {\n          case 'modelInterest':\n            this.formErrorMessages[key] = {\n              required: lang,\n            };\n            break;\n          default:\n            break;\n        }\n      }\n    });\n  }\n\n  getOpportunities(oppId: string) {\n    return this.opportunityService.getOpportunityById(oppId).pipe(\n      tap((e) => {\n        console.log(e);\n        this.opp = e;\n      })\n    );\n  }\n\n  updateForm() {\n    if (this.oppForm && this.opp) {\n      if (this.opp.IntentStatus === 'Hot') {\n        this.opp.Warmth = 100;\n      } else if (this.opp.IntentStatus === 'Warm') {\n        this.opp.Warmth = 50;\n      } else if (this.opp.IntentStatus === 'Cold') {\n        this.opp.Warmth = 0;\n      }\n      this.oppForm.reset(\n        {\n          name: this.opp.ContactName,\n          company: this.opp.Company,\n          channel: this.opp.Channel,\n          source: this.opp.Cmpg,\n          warmth: this.opp.Warmth,\n          modelInterest: this.opp.ModelInterest,\n          notes: this.opp.Notes,\n          PPD: this.opp.PlannedPurchasedDate,\n          PPDRange: this.opp.PlannedPurchaseDateRange,\n          PPDReason: this.opp.PlannedPurchaseDateReason,\n        },\n        { emitEvent: false }\n      );\n    }\n  }\n\n  getOppColor(oppStatus: string, opp: Opportunity) {\n    if (oppStatus === 'open') {\n      if (opp.IsClosed) {\n        return 'assets/icon/opportunity/unlock-disabled.svg';\n      } else {\n        return 'assets/icon/opportunity/unlock.svg';\n      }\n    } else if (oppStatus === 'closed') {\n      if (opp.IsClosed) {\n        return 'warning';\n      } else {\n        return 'medium';\n      }\n    } else {\n      if (opp.Type === 'DEFERRED') {\n        return 'warning';\n      } else {\n        return 'medium';\n      }\n    }\n  }\n\n  updateOppStatus(type: string) {\n    if (this.countryCode === 'my') {\n      if (type === 'open') {\n        this.opp.Type = 'OPEN';\n      } else if (type === 'deferred') {\n        this.opp.Type = 'DEFERRED';\n      } else {\n        this.opp.Type = 'LOST';\n      }\n    }\n  }\n\n  changePPD(evt: Event) {\n    // prevent event on initial loading\n    if (this.isPPDChanged === undefined) {\n      this.isPPDChanged = false;\n      return;\n    }\n    try {\n      this.isPPDChanged = false;\n      this.oppForm.controls['PPDReason'].clearValidators();\n      if (this.opp && this.opp.Id) {\n        const formValues = this.oppForm.value;\n        if (formValues['PPDRange'] === this.customPPDate) {\n          this.isPPDChanged = this.opp.PlannedPurchasedDate !== formValues['PPD'];\n        } else {\n          this.isPPDChanged = this.opp.PlannedPurchaseDateRange !== formValues['PPDRange'];\n        }\n      }\n\n      if (this.isPPDChanged) {\n        this.oppForm.controls['PPDReason'].setValidators([Validators.required]);\n      }\n\n      this.oppForm.controls['PPDReason'].updateValueAndValidity();\n    } catch (err) {\n      // this.err.logError(err);\n      // this.err.presentServerErr(err);\n    }\n  }\n\n  changeCmpgSource(evt: Event) {\n    if (this.oppForm.get('source') && this.oppForm.get('source').value instanceof Campaign) {\n      this.chnlList = this.oppForm.get('source').value.Channel;\n      if (this.chnlList.indexOf(this.oppForm.get('channel').value) < 0) {\n        this.oppForm.get('channel').reset([]);\n      }\n      if (this.oppForm.get('channel').disabled) {\n        this.oppForm.get('channel').enable();\n      }\n    } else {\n      this.oppForm.get('channel').disable();\n    }\n  }\n\n  showModelInterestComp() {\n    console.log(this.oppForm.get('company').value);\n    from(\n      this.modalController.create({\n        component: ModelInterestSelectorComponent,\n        componentProps: {\n          cmp: this.oppForm.get('company').value,\n          team: '',\n          selectedValues: '',\n        },\n      })\n    ).subscribe((modal) => {\n      from(modal.onDidDismiss()).subscribe((modalData) => {\n        if (modalData && modalData.data) {\n          const selectedModel: Array<string> = modalData.data.map((model) => model.label);\n          if (JSON.stringify(this.oppForm.get('modelInterest').value) !== JSON.stringify(selectedModel)) {\n            this.oppForm.get('modelInterest').setValue(selectedModel);\n            this.oppForm.markAsDirty();\n          }\n        }\n      });\n      modal.present();\n    });\n  }\n\n  goToTestdrives() {\n    this.router.navigate([`${TestdrivePageRoutingKeys.BASE}/` + this.opp.Id]);\n  }\n\n  goToTasks() {\n    this.router.navigate([`${TasksPageRoutingKeys.BASE}/` + this.opp.Id]);\n  }\n\n  goToActivityLogs() {\n    this.router.navigate([`${AcitiviesPageRoutingKeys.BASE}/` + this.opp.Id]);\n  }\n\n  goToOffers() {\n    this.router.navigate([`${OffersPageRoutingKeys.BASE}/` + this.opp.Id]);\n  }\n\n  goToBookings() {\n    // this.router.navigate([`${BookingsPageRoutingKeys.BASE}/` + this.opp.Id]);\n  }\n\n  goToDeliveries() {\n    // this.router.navigate([`${DeliveriesPageRoutingKeys.BASE}/` + this.opp.Id]);\n  }\n\n  goToTradeIns() {\n    this.router.navigate([`${TradeinsPageRoutingKeys.BASE}/` + this.opp.Id]);\n  }\n\n  getFavIcon(opp: Opportunity) {\n    if (opp.Flag) {\n      return 'star';\n    } else {\n      return 'star-outline';\n    }\n  }\n\n  save() {\n    if (!this.oppForm.valid) {\n      console.log('invalid opp form!', this.oppForm);\n      if (this.oppForm.hasError('ppDateReason')) {\n        throw new Error(this.oppForm.getError('ppDateReason'));\n      }\n      return;\n    }\n    this.opp.ContactName = this.oppForm.get('name').value;\n    this.opp.Cmpg = this.oppForm.get('source').value;\n    this.opp.Channel = this.oppForm.get('channel').value;\n    this.opp.ModelInterest = this.oppForm.get('modelInterest').value;\n    this.opp.Company = this.oppForm.get('company').value;\n    this.opp.PlannedPurchaseDateRange = this.oppForm.get('PPDRange').value;\n    this.opp.PlannedPurchasedDate = this.oppForm.get('PPD').value;\n    this.opp.PlannedPurchaseDateReason = this.oppForm.get('PPDReason').value;\n    this.translate\n      .get('Common_Saving')\n      .pipe(\n        mergeMap((lang) => {\n          return from(\n            this.loadingCtrl.create({\n              message: lang,\n            })\n          );\n        })\n      )\n      .subscribe(\n        (loading) => {\n          loading.present();\n          return this.opportunityService.upsertOpp(this.opp).subscribe(\n            (res) => {\n              loading.dismiss();\n            },\n            (err) => {\n              loading.dismiss();\n              // add error service call\n            }\n          );\n        },\n        (err) => {\n          // add error service call\n        }\n      );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ModelInterestSelectorComponent } from './model-interest-selector.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule, FormsModule],\n  declarations: [ModelInterestSelectorComponent],\n  exports: [ModelInterestSelectorComponent],\n})\nexport class ModelInterestSelectorModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OpportunityDetailsPageRoutingModule } from './opportunity-details-routing.module';\n\nimport { OpportunityDetailsPage } from './opportunity-details.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SelectorComponentModule } from 'src/app/components/common/selector/selector.module';\nimport { ItemErrComponentModule } from 'src/app/components/common/item-err/item-err.module';\nimport { ModelInterestSelectorModule } from 'src/app/components/common/model-interest-selector/model-interest-selector.module';\nimport { ModelInterestSelectorComponent } from 'src/app/components/common/model-interest-selector/model-interest-selector.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    SelectorComponentModule,\n    ItemErrComponentModule,\n    OpportunityDetailsPageRoutingModule,\n    ModelInterestSelectorModule,\n  ],\n  declarations: [OpportunityDetailsPage],\n  entryComponents: [ModelInterestSelectorComponent],\n})\nexport class OpportunityDetailsPageModule {}\n"],"sourceRoot":"webpack:///"}