{"version":3,"sources":["./src/app/components/common/selector/selector.component.html","./src/app/components/common/selector/selector.component.ts","./src/app/pages/offer/edit-offer/edit-offer.page.html","./src/app/pages/offer/edit-offer/edit-offer-routing.module.ts","./src/app/pages/offer/edit-offer/edit-offer.page.ts","./src/app/pages/offer/edit-offer/edit-offer.module.ts"],"names":["SelectorComponent","modalController","options","selectedOptions","Array","this","selectorsArr","selectors","getPreviousSelected","selected","length","forEach","s","toggle","check","opt","delete","allowMultiple","push","save","obj","some","item","value","filter","dismiss","emit","selection","evt","target","keyword","trim","option","label","toLocaleLowerCase","indexOf","toLowerCase","cancel","searchSelectors","routes","path","PARAM_ID","children","component","EditOfferPage","route","translate","offerSrvc","formBuilder","router","subs","Subscription","countryCode","environment","offerForm","initOfferForm","add","parseURL","offer","paramMap","subscribe","params","Id","get","e","pageTitle","getOfferInfo","getCurrentNavigation","extras","state","states","OpportunityId","STATE_OPPID","console","log","group","id","subtotal","disabled","total","variantName","required","yearMake","sellingPrice","exciseDuty","fleetDiscountPctg","fleetDiscount","discount","salesCampaign","lifestyle","regType","regFee","hpOwnership","hpOwnershipFee","roadTax","insurance","bookingFee","initErrorMessages","form","lang","formErrorMessages","key","Object","keys","controls","from","create","componentProps","header","backdropDismiss","showBackdrop","modal","onDidDismiss","modalVal","present","offerId","getOfferById","done","selectVariantName","pathMatch","EditOfferPageRoutingModule","forChild","EditOfferPageModule"],"mappings":"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","file":"25.335f56fcddcfcad3dd29.js","sourcesContent":["<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"cancel()\">\n        <ion-icon slot=\"icon-only\" name=\"arrow-back\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-searchbar (ionChange)=\"searchSelectors($event)\" debounce=\"500\" placeholder=\"Search\" inputmode=\"search\"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n<ion-content class=\"ion-padding\">\n  <ion-label color=\"primary\"\n    ><b>{{ header | uppercase }}</b></ion-label\n  >\n  <ion-virtual-scroll [items]=\"selectorsArr\">\n    <ion-item *virtualItem=\"let s\" (click)=\"toggle(s)\">\n      <ion-label>\n        <h5 class=\"no-margin-bottom\">{{ s?.label }}</h5>\n      </ion-label>\n      <ion-checkbox slot=\"start\" [checked]=\"isSelected(s)\"></ion-checkbox>\n    </ion-item>\n  </ion-virtual-scroll>\n</ion-content>\n<ion-footer class=\"ion-padding\" *ngIf=\"allowMultiple\">\n  <ion-button fill=\"solid\" expand=\"block\" color=\"primary\" (click)=\"save()\">\n    {{ 'Common_Save' | translate }}\n  </ion-button>\n</ion-footer>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { SelectOption } from 'src/app/models/common/select-option.model';\n\n@Component({\n  selector: 'app-selector',\n  templateUrl: './selector.component.html',\n  styleUrls: ['./selector.component.scss'],\n})\nexport class SelectorComponent implements OnInit {\n  @Input() selectors: SelectOption[];\n  @Input() allowMultiple: boolean;\n  @Input() header: string;\n  @Input() selected: SelectOption[];\n  searchInput: string;\n  selectorsArr: SelectOption[];\n\n  @Output() options = new EventEmitter<SelectOption[]>();\n\n  private selectedOptions = new Array<SelectOption>();\n  constructor(private modalController: ModalController) {}\n\n  ngOnInit() {\n    this.selectorsArr = this.selectors;\n    this.getPreviousSelected();\n  }\n\n  getPreviousSelected(): void {\n    if (this.selected.length > 0) {\n      this.selected.forEach((s: SelectOption) => this.toggle(s));\n    }\n  }\n\n  isSelected(s: SelectOption): boolean {\n    return this.check(s);\n  }\n\n  toggle(opt: SelectOption) {\n    if (this.check(opt)) {\n      this.delete(opt);\n    } else {\n      if (this.allowMultiple) {\n        this.selectedOptions.push(opt);\n      } else {\n        this.selectedOptions = new Array<SelectOption>();\n        this.selectedOptions.push(opt);\n        this.save();\n      }\n    }\n  }\n\n  check(obj: SelectOption) {\n    return this.selectedOptions.some((item) => item.value === obj.value);\n  }\n\n  delete(obj: SelectOption) {\n    this.selectedOptions = this.selectedOptions.filter((item) => item.value !== obj.value);\n  }\n\n  cancel() {\n    this.modalController.dismiss();\n  }\n\n  save() {\n    this.options.emit(this.selectedOptions);\n    this.modalController.dismiss({\n      selection: this.selectedOptions,\n    });\n  }\n\n  searchSelectors(evt: Event) {\n    if (!evt || !evt.target) {\n      return;\n    }\n    const target = evt.target as HTMLInputElement;\n    if (!target.value) {\n      return;\n    }\n    const keyword = target.value;\n    this.selectorsArr = this.selectors;\n    if (keyword && keyword.trim() !== '') {\n      this.selectorsArr = this.selectors.filter((option: SelectOption) => {\n        return option.label.toLocaleLowerCase().indexOf(keyword.toLowerCase()) > -1;\n      });\n    }\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\" mode=\"ios\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"\" text=\"{{'Common_Back'|translate}}\"></ion-back-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"done()\">{{'Common_Done'|translate}}</ion-button>\n    </ion-buttons>\n    <ion-title>{{pageTitle}}</ion-title>\n  </ion-toolbar>\n</ion-header>\n<ion-content>\n  <ng-container [formGroup]=\"offerForm\">\n    <div>\n      <ion-item>\n        <ion-input formControlName=\"variantName\" placeholder='{{\"EditOfferPage_VariantName\"|translate}}' (click)=\"selectVariantName()\"></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.variantName\" [messages]=\"formErrorMessages.variantName\"></app-item-err>\n      <ion-item>\n        <ion-datetime displayFormat=\"YYYY\" formControlName=\"yearMake\" placeholder='{{\"EditOfferPage_YearMake\"|translate}}'></ion-datetime>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.yearMake\" [messages]=\"formErrorMessages.yearMake\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"sellingPrice\" placeholder='{{\"EditOfferPage_SellingPrice\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.sellingPrice\" [messages]=\"formErrorMessages.sellingPrice\"></app-item-err>\n      <ion-item>\n        <ion-select formControlName=\"exciseDuty\" placeholder='{{\"EditOfferPage_ExciseDuty\"|translate}}'>\n          <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of exciseDuties\"> {{ opt.label }} </ion-select-option>\n        </ion-select>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.exciseDuty\" [messages]=\"formErrorMessages.exciseDuty\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"fleetDiscountPctg\" placeholder='{{\"EditOfferPage_FleetDiscountPctg\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.fleetDiscountPctg\" [messages]=\"formErrorMessages.fleetDiscountPctg\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"fleetDiscount\" placeholder='{{\"EditOfferPage_FleetDiscount\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.fleetDiscount\" [messages]=\"formErrorMessages.fleetDiscount\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"discount\" placeholder='{{\"EditOfferPage_Discount\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.discount\" [messages]=\"formErrorMessages.discount\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"salesCampaign\" placeholder='{{\"EditOfferPage_SalesCampaign\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.salesCampaign\" [messages]=\"formErrorMessages.salesCampaign\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"lifestyle\" placeholder='{{\"EditOfferPage_Lifestyle\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.lifestyle\" [messages]=\"formErrorMessages.lifestyle\"></app-item-err>\n      <ion-item>\n        <ion-label class=\"no-opacity\">\n          <b>{{\"EditOfferPage_Subtotal\"|translate}}</b>\n        </ion-label>\n        <ion-input formControlName=\"subtotal\"></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-select formControlName=\"regType\" placeholder='{{\"EditOfferPage_RegistrationType\"|translate}}'>\n          <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of regTypes\"> {{ opt.label }} </ion-select-option>\n        </ion-select>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.regType\" [messages]=\"formErrorMessages.regType\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"regFee\" placeholder='{{\"EditOfferPage_RegistrationFee\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.regFee\" [messages]=\"formErrorMessages.regFee\"></app-item-err>\n      <ion-item>\n        <ion-select formControlName=\"hpOwnership\" placeholder='{{\"EditOfferPage_HPOwnership\"|translate}}'>\n          <ion-select-option [value]=\"opt.value\" *ngFor=\"let opt of hpOwnerships\"> {{ opt.label }} </ion-select-option>\n        </ion-select>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.hpOwnership\" [messages]=\"formErrorMessages.hpOwnership\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"hpOwnershipFee\" placeholder='{{\"EditOfferPage_HPOwnershipFee\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.hpOwnershipFee\" [messages]=\"formErrorMessages.hpOwnershipFee\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"roadTax\" placeholder='{{\"EditOfferPage_RoadTax\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.roadTax\" [messages]=\"formErrorMessages.roadTax\"></app-item-err>\n      <ion-item>\n        <ion-input formControlName=\"insurance\" placeholder='{{\"EditOfferPage_Insurance\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.insurance\" [messages]=\"formErrorMessages.insurance\"></app-item-err>\n      <ion-item>\n        <ion-label class=\"no-opacity\">\n          <b>{{\"EditOfferPage_TotalPrice\"|translate}}</b>\n        </ion-label>\n        <ion-input formControlName=\"total\"></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-input formControlName=\"bookingFee\" placeholder='{{\"EditOfferPage_BookingFee\"|translate}}'></ion-input>\n      </ion-item>\n      <app-item-err [control]=\"offerForm.controls?.bookingFee\" [messages]=\"formErrorMessages.bookingFee\"></app-item-err>\n    </div>\n  </ng-container>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditOfferPage } from './edit-offer.page';\nimport { EditOfferPageRoutingKeys } from './edit-offer-routing.keys';\n\nconst routes: Routes = [\n  {\n    path: `:${EditOfferPageRoutingKeys.PARAM_ID}`,\n    children: [\n      {\n        path: '',\n        component: EditOfferPage,\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditOfferPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { from, Subscription } from 'rxjs';\nimport { SelectorComponent } from 'src/app/components/common/selector/selector.component';\nimport { FormErrorMessages } from 'src/app/models/common/form-error.model';\nimport { Offer } from 'src/app/models/common/offer.model';\nimport { SelectOption } from 'src/app/models/common/select-option.model';\nimport { CommonOfferService } from 'src/app/services/common/offer/offer.service';\nimport { environment } from 'src/environments/environment';\nimport { EditOfferPageRoutingKeys } from './edit-offer-routing.keys';\n\n@Component({\n  selector: 'app-edit-offer',\n  templateUrl: './edit-offer.page.html',\n  styleUrls: ['./edit-offer.page.scss'],\n})\nexport class EditOfferPage implements OnInit {\n  pageTitle: string;\n  private subs = new Subscription();\n  offer: Offer;\n  states: object;\n  countryCode = environment.countryCode;\n  offerForm: FormGroup;\n  formErrorMessages: FormErrorMessages;\n  exciseDuties: SelectOption[];\n  regTypes: SelectOption[];\n  hpOwnerships: SelectOption[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private translate: TranslateService,\n    private offerSrvc: CommonOfferService,\n    private formBuilder: FormBuilder,\n    private modalController: ModalController,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.offerForm = this.initOfferForm();\n    this.subs.add(this.parseURL());\n  }\n\n  parseURL() {\n    this.offer = new Offer();\n    return this.route.paramMap.subscribe((params) => {\n      this.offer.Id = params.get(EditOfferPageRoutingKeys.PARAM_ID);\n      if (this.offer.Id === EditOfferPageRoutingKeys.PARAM_ID) {\n        this.translate.get('EditOfferPage_NewOffer').subscribe((e) => {\n          this.pageTitle = e;\n        });\n      } else {\n        this.translate.get('EditOfferPage_EditOffer').subscribe((e) => {\n          this.pageTitle = e;\n          this.getOfferInfo(this.offer.Id);\n        });\n      }\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.states = this.router.getCurrentNavigation().extras.state;\n        this.offer.OpportunityId = this.states[EditOfferPageRoutingKeys.STATE_OPPID];\n        console.log(this.offer.OpportunityId);\n      }\n    });\n  }\n\n  private initOfferForm(): FormGroup {\n    const offerForm = this.formBuilder.group({\n      id: [''],\n      subtotal: [{ value: '', disabled: true }],\n      total: [{ value: '', disabled: true }],\n      variantName: ['', [Validators.required]],\n      yearMake: ['', [Validators.required]],\n      sellingPrice: ['', [Validators.required]],\n      exciseDuty: [''],\n      fleetDiscountPctg: [''],\n      fleetDiscount: [''],\n      discount: [''],\n      salesCampaign: [''],\n      lifestyle: [''],\n      regType: ['', [Validators.required]],\n      regFee: [''],\n      hpOwnership: [''],\n      hpOwnershipFee: [''],\n      roadTax: [''],\n      insurance: [''],\n      bookingFee: [''],\n    });\n    this.initErrorMessages(offerForm);\n    return offerForm;\n  }\n\n  private initErrorMessages(form: FormGroup) {\n    this.translate.get('Error_CannotBeEmpty').subscribe((lang) => {\n      this.formErrorMessages = {\n        group: {},\n      };\n      if (!form) {\n        return;\n      }\n      for (const key of Object.keys(form.controls)) {\n        switch (key) {\n          case 'variantName':\n          case 'yearMake':\n          case 'sellingPrice':\n          case 'regType':\n            this.formErrorMessages[key] = {\n              required: lang,\n            };\n            break;\n          default:\n            break;\n        }\n      }\n    });\n  }\n\n  selectVariantName() {\n    this.translate.get('EditOfferPage_SelectVariant').subscribe((lang) => {\n      from(\n        this.modalController.create({\n          component: SelectorComponent,\n          componentProps: {\n            selectors: [],\n            selected: [],\n            allowMultiple: false,\n            header: lang,\n          },\n          backdropDismiss: false,\n          showBackdrop: true,\n        })\n      ).subscribe((modal: HTMLIonModalElement) => {\n        from(modal.onDidDismiss()).subscribe((modalVal) => {\n          if (modalVal && modalVal.data && modalVal.data.selection) {\n            // this.setModelInterest(modalVal.data.selection);\n          }\n        });\n        modal.present();\n      });\n    });\n  }\n\n  getOfferInfo(offerId: string) {\n    this.offerSrvc.getOfferById(offerId).subscribe((e) => {\n      this.offer = e;\n      console.log(e);\n    });\n  }\n\n  done() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditOfferPageRoutingModule } from './edit-offer-routing.module';\n\nimport { EditOfferPage } from './edit-offer.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ItemErrComponentModule } from 'src/app/components/common/item-err/item-err.module';\nimport { SelectorComponentModule } from 'src/app/components/common/selector/selector.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    IonicModule,\n    ItemErrComponentModule,\n    SelectorComponentModule,\n    EditOfferPageRoutingModule,\n  ],\n  declarations: [EditOfferPage],\n})\nexport class EditOfferPageModule {}\n"],"sourceRoot":"webpack:///"}